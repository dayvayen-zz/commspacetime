{
    "contents" : "#' Time-volume function\n#'\n#' The last function in the series of modeling commmunication space-time.\n#' \n#' @param duration How long each vocalization lasts for (seconds)\n#' @param rate How often each vocalization is produced per minute\n#' @param radius Calculated from the radius_calc.r function--radius of the sphere\n#' @param sphere If the vocalization is produced above the ground, this is set to true. If it's produced on the ground, it's set to false.\n#' @export\n#' @examples\n#' time_volume(0.02, 37, 19, sphere = F)\n\ntime_volume <- function(duration, rate, radius, sphere = T) {\n  total_time <- duration*rate\n  if(sphere == T) {\n    vol <- (4/3)*pi*radius^3\n  } else {\n    vol <- (2/3)*pi*radius^3\n  }\n  time_vol <- vol*total_time\n  list1 <- list(time_vol, vol)\n  names(list1) <- c(\"time.volume\", \"volume\")\n  return(list1)\n}",
    "created" : 1461786608241.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3665800070",
    "id" : "DFB3A8AA",
    "lastKnownWriteTime" : 1461786739,
    "path" : "~/commspacetime/R/time_volume.R",
    "project_path" : "R/time_volume.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}