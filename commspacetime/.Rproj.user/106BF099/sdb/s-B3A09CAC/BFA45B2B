{
    "contents" : "#' Radius calculation\n#' \n#' This function calculates the radius of the sphere or hemisphere of \n#' communication. This can then be used in future calculations.\n#' It requires an initialized vector to work with--the upper limit of this\n#' can be determined by your species' vocalization propoerties. \n#' @param signal The source level (dB re 20 microPa) of the vocalization.\n#' @param noise The ambient noise level (dB re 20 microPa) of the place where the animal is vocalizing.\n#' @param r_vector The initialized vector of possible radius values.\n#' @param absorption The atmospheric absorption calculated by the absorption.R function. Set to 1 unless otherwise specified.\n#' @param perception The detection threshold for your species in question, if known. By default, this is set to zero, which indicates the best possible scenario in which any signal can be perceived if it is above the level of background noise.\n#' @export\n#' @examples\n#' find_r(90, 65, r_vector, absorption = 1, perception)\n\n\n\nfind_r <- function(signal, noise, r_vector, absorption = 1, perception = 0) {\n  attenuation = signal - 20*log10(r_vector) - absorption*r_vector\n  r <- r_vector[which.min(abs(noise - attenuation))]\n  return(r)\n}\n\nr_vector <- seq(0, 3000, 0.01)\n",
    "created" : 1461786093381.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2211346652",
    "id" : "BFA45B2B",
    "lastKnownWriteTime" : 1461786140,
    "path" : "~/commspacetime/R/radius_calc.R",
    "project_path" : "R/radius_calc.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}